{"ast":null,"code":"var _jsxFileName = \"/Users/lajika/Desktop/LAB/Module 1/Todo-ts-redux-mui/src/components/TodoItem.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAppDispatch } from \"../store/hooks\";\nimport { deleteTodo, updateTodo } from \"../store/slices/todo.slice\";\nimport { ListItem, Typography, Checkbox } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoItem = _ref => {\n  _s();\n  let {\n    todo\n  } = _ref;\n  const dispatch = useAppDispatch();\n\n  //mui \n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const removeHandler = (event, id) => {\n    event.preventDefault();\n    const shouldRemove = confirm('Are you sure, you want to delete this activity?');\n    if (shouldRemove) {\n      dispatch(deleteTodo(id));\n    }\n  };\n  const handleChange = (event, item) => {\n    const todoCopy = {\n      ...item\n    };\n    todoCopy.completed = event.target.checked;\n    dispatch(updateTodo(todoCopy));\n  };\n  return /*#__PURE__*/_jsxDEV(ListItem, {\n    style: {\n      border: '1px solid lightblue',\n      margin: '10px 0',\n      display: 'flex',\n      justifyContent: 'space-between'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: todo.completed,\n      onChange: event => handleChange(event, todo)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n      sx: todo.completed ? {\n        width: '70%',\n        textDecoration: 'line-through'\n      } : {\n        width: '70%',\n        textDecoration: 'none'\n      },\n      variant: \"body1\",\n      children: todo.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        width: '10%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n        color: \"info\",\n        onClick: handleOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n        onClick: event => removeHandler(event, todo.id),\n        color: \"error\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, todo.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoItem, \"mP8tpK5ffRmCHVgPQZG0MLHgH4o=\", false, function () {\n  return [useAppDispatch];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useAppDispatch","deleteTodo","updateTodo","ListItem","Typography","Checkbox","DeleteIcon","EditIcon","jsxDEV","_jsxDEV","TodoItem","_ref","_s","todo","dispatch","open","setOpen","useState","handleOpen","handleClose","removeHandler","event","id","preventDefault","shouldRemove","confirm","handleChange","item","todoCopy","completed","target","checked","style","border","margin","display","justifyContent","children","onChange","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","textDecoration","variant","title","color","onClick","_c","$RefreshReg$"],"sources":["/Users/lajika/Desktop/LAB/Module 1/Todo-ts-redux-mui/src/components/TodoItem.tsx"],"sourcesContent":["import React from 'react';\nimport { ITodo } from \"../interfaces\";\nimport { useAppSelector, useAppDispatch } from \"../store/hooks\";\nimport { deleteTodo, updateTodo } from \"../store/slices/todo.slice\";\nimport { List, ListItem, Typography, Checkbox, Modal } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\ndeclare var confirm: (question: string) => boolean\n\nconst TodoItem = ({ todo }) => {\n    const dispatch = useAppDispatch();\n\n    //mui \n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const removeHandler = (event: React.MouseEvent, id: number) => {\n        event.preventDefault();\n        const shouldRemove = confirm(\n            'Are you sure, you want to delete this activity?'\n        );\n\n        if (shouldRemove) {\n            dispatch(deleteTodo(id))\n        }\n\n    }\n\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>, item: ITodo) => {\n        const todoCopy = { ...item }\n        todoCopy.completed = event.target.checked\n        dispatch(updateTodo(todoCopy))\n    }\n\n    return (\n        <ListItem key={todo.id} style={{ border: '1px solid lightblue', margin: '10px 0', display: 'flex', justifyContent: 'space-between' }} >\n            <Checkbox checked={todo.completed} onChange={(event) => handleChange(event, todo)} />\n            <Typography\n                sx={todo.completed ? { width: '70%', textDecoration: 'line-through' } : { width: '70%', textDecoration: 'none' }}\n                variant=\"body1\"\n            >\n                {todo.title}\n            </Typography>\n            <div style={{ display: 'flex', justifyContent: 'space-between', width: '10%' }}>\n                <EditIcon color='info' onClick={handleOpen} />\n                <DeleteIcon onClick={(event) => removeHandler(event, todo.id)} color='error' />\n            </div>\n        </ListItem>\n    )\n}\n\nexport default TodoItem"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/lajika/Desktop/LAB/Module 1/Todo-ts-redux-mui/src/components/TodoItem.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useAppDispatch } from \"../store/hooks\";\nimport { deleteTodo, updateTodo } from \"../store/slices/todo.slice\";\nimport { ListItem, Typography, Checkbox, Modal, TextField } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TodoItem = _ref => {\n  _s();\n  let {\n    todo\n  } = _ref;\n  const dispatch = useAppDispatch();\n\n  //mui \n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const removeHandler = (event, id) => {\n    event.preventDefault();\n    const shouldRemove = confirm('Are you sure, you want to delete this activity?');\n    if (shouldRemove) {\n      dispatch(deleteTodo(id));\n    }\n  };\n  const handleChange = (event, item) => {\n    const todoCopy = {\n      ...item\n    };\n    todoCopy.completed = event.target.checked;\n    dispatch(updateTodo(todoCopy));\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ListItem, {\n      style: {\n        border: '1px solid lightblue',\n        margin: '10px 0',\n        display: 'flex',\n        justifyContent: 'space-between'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: todo.completed,\n        onChange: event => handleChange(event, todo)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        sx: todo.completed ? {\n          width: '70%',\n          textDecoration: 'line-through'\n        } : {\n          width: '70%',\n          textDecoration: 'none'\n        },\n        variant: \"body1\",\n        children: todo.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          justifyContent: 'space-between',\n          width: '10%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(EditIcon, {\n          color: \"info\",\n          onClick: handleOpen\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(DeleteIcon, {\n          onClick: event => removeHandler(event, todo.id),\n          color: \"error\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: open,\n      onClose: handleClose,\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Enter activity name\",\n        variant: \"outlined\",\n        onKeyPress: keyPressHandler,\n        onChange: e => setTitle(e.target.value),\n        value: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(TodoItem, \"mP8tpK5ffRmCHVgPQZG0MLHgH4o=\", false, function () {\n  return [useAppDispatch];\n});\n_c = TodoItem;\nexport default TodoItem;\nvar _c;\n$RefreshReg$(_c, \"TodoItem\");","map":{"version":3,"names":["React","useAppDispatch","deleteTodo","updateTodo","ListItem","Typography","Checkbox","Modal","TextField","DeleteIcon","EditIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoItem","_ref","_s","todo","dispatch","open","setOpen","useState","handleOpen","handleClose","removeHandler","event","id","preventDefault","shouldRemove","confirm","handleChange","item","todoCopy","completed","target","checked","children","style","border","margin","display","justifyContent","onChange","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","textDecoration","variant","title","color","onClick","onClose","label","onKeyPress","keyPressHandler","e","setTitle","value","_c","$RefreshReg$"],"sources":["/Users/lajika/Desktop/LAB/Module 1/Todo-ts-redux-mui/src/components/TodoItem.tsx"],"sourcesContent":["import React from 'react';\nimport { ITodo } from \"../interfaces\";\nimport { useAppDispatch } from \"../store/hooks\";\nimport { deleteTodo, updateTodo } from \"../store/slices/todo.slice\";\nimport { ListItem, Typography, Checkbox, Modal, TextField } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n\ndeclare var confirm: (question: string) => boolean\n\ntype Props = {\n    todo: ITodo\n}\n\nconst TodoItem = ({ todo }: Props) => {\n    const dispatch = useAppDispatch();\n\n    //mui \n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    const removeHandler = (event: React.MouseEvent, id: number) => {\n        event.preventDefault();\n        const shouldRemove = confirm(\n            'Are you sure, you want to delete this activity?'\n        );\n\n        if (shouldRemove) {\n            dispatch(deleteTodo(id))\n        }\n\n    }\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>, item: ITodo) => {\n        const todoCopy = { ...item }\n        todoCopy.completed = event.target.checked\n        dispatch(updateTodo(todoCopy))\n    }\n\n    return (\n        <>\n            <ListItem key={todo.id} style={{ border: '1px solid lightblue', margin: '10px 0', display: 'flex', justifyContent: 'space-between' }} >\n                <Checkbox checked={todo.completed} onChange={(event) => handleChange(event, todo)} />\n                <Typography\n                    sx={todo.completed ? { width: '70%', textDecoration: 'line-through' } : { width: '70%', textDecoration: 'none' }}\n                    variant=\"body1\"\n                >\n                    {todo.title}\n                </Typography>\n                <div style={{ display: 'flex', justifyContent: 'space-between', width: '10%' }}>\n                    <EditIcon color='info' onClick={handleOpen} />\n                    <DeleteIcon onClick={(event) => removeHandler(event, todo.id)} color='error' />\n                </div>\n            </ListItem>\n            <Modal\n                open={open}\n                onClose={handleClose}\n            >\n                <TextField id=\"outlined-basic\" label=\"Enter activity name\" variant=\"outlined\" onKeyPress={keyPressHandler} onChange={(e) => setTitle(e.target.value)} value={title} />\n\n            </Modal>\n        </>\n    )\n}\n\nexport default TodoItem"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
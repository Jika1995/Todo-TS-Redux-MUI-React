{"ast":null,"code":"var _jsxFileName = \"/Users/lajika/Desktop/LAB/Module 1/Todo-ts-redux-mui/src/components/TodoList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useAppSelector, useAppDispatch } from \"../store/hooks\";\nimport { deleteTodo, updateTodo } from \"../store/slices/todo.slice\";\nimport { List } from '@mui/material';\nimport TodoItem from './TodoItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TodoList = () => {\n  _s();\n  const todos = useAppSelector(state => state.todos.data);\n  const dispatch = useAppDispatch();\n\n  //mui \n  const [open, setOpen] = React.useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  if (todos.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"center\",\n      children: \"There is no activities to do yet! \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 16\n    }, this);\n  }\n  const removeHandler = (event, id) => {\n    event.preventDefault();\n    const shouldRemove = confirm('Are you sure, you want to delete this activity?');\n    if (shouldRemove) {\n      dispatch(deleteTodo(id));\n    }\n  };\n  const handleChange = (event, item) => {\n    const todoCopy = {\n      ...item\n    };\n    todoCopy.completed = event.target.checked;\n    dispatch(updateTodo(todoCopy));\n  };\n  return /*#__PURE__*/_jsxDEV(List, {\n    sx: {\n      width: '40%',\n      margin: 'auto'\n    },\n    children: todos.map(todo => {\n      return /*#__PURE__*/_jsxDEV(TodoItem, {\n        todo: todo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(TodoList, \"V7pwTS1Zl9MdiKJ7FWJJoZ80fL0=\", false, function () {\n  return [useAppSelector, useAppDispatch];\n});\n_c = TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useAppSelector","useAppDispatch","deleteTodo","updateTodo","List","TodoItem","jsxDEV","_jsxDEV","TodoList","_s","todos","state","data","dispatch","open","setOpen","useState","handleOpen","handleClose","length","className","children","fileName","_jsxFileName","lineNumber","columnNumber","removeHandler","event","id","preventDefault","shouldRemove","confirm","handleChange","item","todoCopy","completed","target","checked","sx","width","margin","map","todo","_c","$RefreshReg$"],"sources":["/Users/lajika/Desktop/LAB/Module 1/Todo-ts-redux-mui/src/components/TodoList.tsx"],"sourcesContent":["import React from \"react\";\nimport { ITodo } from \"../interfaces\";\nimport { useAppSelector, useAppDispatch } from \"../store/hooks\";\nimport { deleteTodo, todoSlice, updateTodo } from \"../store/slices/todo.slice\";\nimport { List, ListItem, Typography, Checkbox, Modal } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport TodoItem from './TodoItem';\n\ndeclare var confirm: (question: string) => boolean\n\nexport const TodoList: React.FC = () => {\n    const todos = useAppSelector((state) => state.todos.data);\n    const dispatch = useAppDispatch();\n\n    //mui \n    const [open, setOpen] = React.useState(false);\n    const handleOpen = () => setOpen(true);\n    const handleClose = () => setOpen(false);\n\n    if (todos.length === 0) {\n        return <p className=\"center\">There is no activities to do yet! </p>\n    }\n\n    const removeHandler = (event: React.MouseEvent, id: number) => {\n        event.preventDefault();\n        const shouldRemove = confirm(\n            'Are you sure, you want to delete this activity?'\n        );\n\n        if (shouldRemove) {\n            dispatch(deleteTodo(id))\n        }\n\n    }\n\n    const handleChange = (event: React.ChangeEvent<HTMLInputElement>, item: ITodo) => {\n        const todoCopy = { ...item }\n        todoCopy.completed = event.target.checked\n        dispatch(updateTodo(todoCopy))\n    }\n\n    return (\n        <List sx={{ width: '40%', margin: 'auto' }}>\n            {todos.map(todo => {\n                return (\n                    <TodoItem todo={todo} />\n                )\n            })}\n        </List>\n    )\n}\n\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,cAAc,EAAEC,cAAc,QAAQ,gBAAgB;AAC/D,SAASC,UAAU,EAAaC,UAAU,QAAQ,4BAA4B;AAC9E,SAASC,IAAI,QAA+C,eAAe;AAG3E,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIlC,OAAO,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpC,MAAMC,KAAK,GAAGV,cAAc,CAAEW,KAAK,IAAKA,KAAK,CAACD,KAAK,CAACE,IAAI,CAAC;EACzD,MAAMC,QAAQ,GAAGZ,cAAc,EAAE;;EAEjC;EACA,MAAM,CAACa,IAAI,EAAEC,OAAO,CAAC,GAAGhB,KAAK,CAACiB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAMC,UAAU,GAAGA,CAAA,KAAMF,OAAO,CAAC,IAAI,CAAC;EACtC,MAAMG,WAAW,GAAGA,CAAA,KAAMH,OAAO,CAAC,KAAK,CAAC;EAExC,IAAIL,KAAK,CAACS,MAAM,KAAK,CAAC,EAAE;IACpB,oBAAOZ,OAAA;MAAGa,SAAS,EAAC,QAAQ;MAAAC,QAAA,EAAC;IAAkC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI;EACvE;EAEA,MAAMC,aAAa,GAAGA,CAACC,KAAuB,EAAEC,EAAU,KAAK;IAC3DD,KAAK,CAACE,cAAc,EAAE;IACtB,MAAMC,YAAY,GAAGC,OAAO,CACxB,iDAAiD,CACpD;IAED,IAAID,YAAY,EAAE;MACdjB,QAAQ,CAACX,UAAU,CAAC0B,EAAE,CAAC,CAAC;IAC5B;EAEJ,CAAC;EAED,MAAMI,YAAY,GAAGA,CAACL,KAA0C,EAAEM,IAAW,KAAK;IAC9E,MAAMC,QAAQ,GAAG;MAAE,GAAGD;IAAK,CAAC;IAC5BC,QAAQ,CAACC,SAAS,GAAGR,KAAK,CAACS,MAAM,CAACC,OAAO;IACzCxB,QAAQ,CAACV,UAAU,CAAC+B,QAAQ,CAAC,CAAC;EAClC,CAAC;EAED,oBACI3B,OAAA,CAACH,IAAI;IAACkC,EAAE,EAAE;MAAEC,KAAK,EAAE,KAAK;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAnB,QAAA,EACtCX,KAAK,CAAC+B,GAAG,CAACC,IAAI,IAAI;MACf,oBACInC,OAAA,CAACF,QAAQ;QAACqC,IAAI,EAAEA;MAAK;QAAApB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAEhC,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACC;AAEf,CAAC;AAAAhB,EAAA,CAxCYD,QAAkB;EAAA,QACbR,cAAc,EACXC,cAAc;AAAA;AAAA0C,EAAA,GAFtBnC,QAAkB;AAAA,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}